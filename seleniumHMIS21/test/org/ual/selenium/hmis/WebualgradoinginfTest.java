package org.ual.selenium.hmis;


// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class WebualgradoinginfTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
		System.setProperty("webdriver.gecko.driver",  "drivers/geckodriver.exe");
		FirefoxOptions firefoxOptions = new FirefoxOptions();
//	 	if (headless) firefoxOptions.setHeadless(true);
		driver = new FirefoxDriver(firefoxOptions);
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void hmisual() {
    // Test name: hmis-ual
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.ual.es/");
    // 2 | setWindowSize | 842x635 | 
    driver.manage().window().setSize(new Dimension(842, 635));
    // 3 | click | linkText=Estudios | 
    driver.findElement(By.linkText("Estudios")).click();
    // 4 | click | linkText=Grados | 
    driver.findElement(By.linkText("Grados")).click();
    // 5 | click | css=.ng-scope:nth-child(9) .ng-scope:nth-child(4) .ng-binding | 
    driver.findElement(By.cssSelector(".ng-scope:nth-child(9) .ng-scope:nth-child(4) .ng-binding")).click();
    // 6 | click | linkText=Plan de Estudios | 
    driver.findElement(By.linkText("Plan de Estudios")).click();
    // 7 | click | linkText=Asignaturas | 
    driver.findElement(By.linkText("Asignaturas")).click();
    // 8 | assertText | linkText=Herramientas y Métodos de Ingeniería del Software | Herramientas y Métodos de Ingeniería del Software
    assertThat(driver.findElement(By.linkText("Herramientas y Métodos de Ingeniería del Software")).getText(), is("Herramientas y Métodos de Ingeniería del Software"));
  }
  @Test
  public void mds2ual() {
    // Test name: mds2-ual
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.ual.es/");
    // 2 | setWindowSize | 842x635 | 
    driver.manage().window().setSize(new Dimension(842, 635));
    // 3 | click | linkText=Estudios | 
    driver.findElement(By.linkText("Estudios")).click();
    // 4 | click | linkText=Grados | 
    driver.findElement(By.linkText("Grados")).click();
    // 5 | click | css=.ng-scope:nth-child(9) .ng-scope:nth-child(4) .ng-binding | 
    driver.findElement(By.cssSelector(".ng-scope:nth-child(9) .ng-scope:nth-child(4) .ng-binding")).click();
    // 6 | click | linkText=Plan de Estudios | 
    driver.findElement(By.linkText("Plan de Estudios")).click();
    // 7 | click | linkText=Asignaturas | 
    driver.findElement(By.linkText("Asignaturas")).click();
    // 8 | assertText | linkText=Modelado y Diseño del Software 2 | Modelado y Diseño del Software 2
    assertThat(driver.findElement(By.linkText("Modelado y Diseño del Software 2")).getText(), is("Modelado y Diseño del Software 2"));
  }
  @Test
  public void tdiual() {
    // Test name: tdi-ual
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.ual.es/");
    // 2 | setWindowSize | 842x635 | 
    driver.manage().window().setSize(new Dimension(842, 635));
    // 3 | click | linkText=Estudios | 
    driver.findElement(By.linkText("Estudios")).click();
    // 4 | click | linkText=Grados | 
    driver.findElement(By.linkText("Grados")).click();
    // 5 | click | css=.ng-scope:nth-child(9) .ng-scope:nth-child(4) .ng-binding | 
    driver.findElement(By.cssSelector(".ng-scope:nth-child(9) .ng-scope:nth-child(4) .ng-binding")).click();
    // 6 | click | linkText=Plan de Estudios | 
    driver.findElement(By.linkText("Plan de Estudios")).click();
    // 7 | click | linkText=Asignaturas | 
    driver.findElement(By.linkText("Asignaturas")).click();
    // 8 | assertText | linkText=Tratamiento Digital de Imágenes | Tratamiento Digital de Imágenes
    assertThat(driver.findElement(By.linkText("Tratamiento Digital de Imágenes")).getText(), is("Tratamiento Digital de Imágenes"));
  }
}
