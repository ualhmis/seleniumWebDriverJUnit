package org.ual.selenium.hmis;


// Generated by Selenium IDE
import static org.junit.jupiter.api.Assertions.fail;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvFileSource;
import org.junit.jupiter.params.provider.CsvSource;


import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.hamcrest.MatcherAssert.assertThat;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class WebualgradoinginfTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	static JavascriptExecutor js;
	
	@BeforeAll
	public static void setUpAll() {
		// Firefox 
		// Descargar geckodriver de https://github.com/mozilla/geckodriver/releases
		// Descomprimir el archivo geckodriver.exe en la carpeta drivers
		System.setProperty("webdriver.gecko.driver",  "drivers/geckodriver.exe");

		// Chrome
		// Descargar Chromedriver de https://chromedriver.chromium.org/downloads
		// Descomprimir el archivo chromedriver.exe en la carpeta drivers
		System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");

		
	}
	// @BeforeEach
	public void setUp(int browser) {
		// Browser selector 
		// int browser= 0; // 0: firefox, 1: chrome,...
		Boolean headless = false;
		
		switch (browser) {
		case 0:  // firefox
			FirefoxOptions firefoxOptions = new FirefoxOptions();
			if (headless) firefoxOptions.setHeadless(headless);
			driver = new FirefoxDriver(firefoxOptions);

			break;
		case 1: // chrome
			ChromeOptions chromeOptions = new ChromeOptions();
			if (headless) chromeOptions.setHeadless(headless);
			// chromeOptions.addArguments("window-size=1920,1080");
			driver = new ChromeDriver(chromeOptions);

			break;

		default:
			fail("Please select a browser");
			break;
		}
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}
	@AfterEach
	public void tearDown() {
		driver.quit();
	}
	
	@ParameterizedTest (name = "{index} => [{0}] {1}")
	@CsvSource({"0, Tratamiento Digital de Imágenes", 
			    "1, Modelado y Diseño del Software 2", 
			    "0, Modelado y Diseño del Software 1", 
			    "1, Introducción a la Programación"})
	
	public void ualcourseBrowser(int browser, String course) {
		this.setUp(browser);
		
		// Test name: tdi-ual
		// Step # | name | target | value
		// 1 | open | / | 
		driver.get("https://www.ual.es/");
		// 2 | setWindowSize | 842x635 | 
		driver.manage().window().setSize(new Dimension(842, 635));
		// 3 | click | linkText=Estudios | 
		driver.findElement(By.linkText("Estudios")).click();
		// 4 | click | linkText=Grados | 
		driver.findElement(By.linkText("Grados")).click();
	    // 5 | click | xpath=//span[contains(.,'Grado en Ingeniería Informática (Plan 2015)')] | 
		{
			WebDriverWait wait = new WebDriverWait(driver, 20);
			wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[contains(.,\'Grado en Ingeniería Informática (Plan 2015)\')]")));
		}
		driver.findElement(By.xpath("//span[contains(.,\'Grado en Ingeniería Informática (Plan 2015)\')]")).click();		
	    // 6 | click | linkText=Plan de Estudios | 
		driver.findElement(By.linkText("Plan de Estudios")).click();
		// 7 | click | linkText=Asignaturas | 
		driver.findElement(By.linkText("Asignaturas")).click();
		// 8 | assertText | linkText=Tratamiento Digital de Imágenes | Tratamiento Digital de Imágenes
		{
			WebDriverWait wait = new WebDriverWait(driver, 20);
			wait.until(ExpectedConditions.elementToBeClickable(By.linkText(course)));
		}
		assertThat(driver.findElement(By.linkText(course)).getText(), is(course));
	}
/*	
	@ParameterizedTest (name = "{index} => {0}")
	@CsvSource({"Tratamiento Digital de Imágenes", 
			    "Modelado y Diseño del Software 2", 
			    "Modelado y Diseño del Software 1", 
			    "Introducción a la Programación"})
	
	public void ualcourse(String course) {
		// Test name: tdi-ual
		// Step # | name | target | value
		// 1 | open | / | 
		driver.get("https://www.ual.es/");
		// 2 | setWindowSize | 842x635 | 
		driver.manage().window().setSize(new Dimension(842, 635));
		// 3 | click | linkText=Estudios | 
		driver.findElement(By.linkText("Estudios")).click();
		// 4 | click | linkText=Grados | 
		driver.findElement(By.linkText("Grados")).click();
	    // 5 | click | xpath=//span[contains(.,'Grado en Ingeniería Informática (Plan 2015)')] | 
		{
			WebDriverWait wait = new WebDriverWait(driver, 20);
			wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[contains(.,\'Grado en Ingeniería Informática (Plan 2015)\')]")));
		}
		driver.findElement(By.xpath("//span[contains(.,\'Grado en Ingeniería Informática (Plan 2015)\')]")).click();		
	    // 6 | click | linkText=Plan de Estudios | 
		driver.findElement(By.linkText("Plan de Estudios")).click();
		// 7 | click | linkText=Asignaturas | 
		driver.findElement(By.linkText("Asignaturas")).click();
		// 8 | assertText | linkText=Tratamiento Digital de Imágenes | Tratamiento Digital de Imágenes
		{
			WebDriverWait wait = new WebDriverWait(driver, 20);
			wait.until(ExpectedConditions.elementToBeClickable(By.linkText(course)));
		}
		assertThat(driver.findElement(By.linkText(course)).getText(), is(course));
	}
*/
}
