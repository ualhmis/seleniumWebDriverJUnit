package org.ual.selenium.hmis;


// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.After;
import org.junit.AfterClass;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
public class WebualgradoinginfTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	static JavascriptExecutor js;

	@Before
	public void setUp() {

		// Using a system property to chose the browser (by jjcanada)
		// Browser as System.property: "browserWebDriver"
		// In maven, call:
		// run with firefox: clean test -DbrowserWebDriver=firefox
		// run with chrome : clean test -DbrowserWebDriver=chrome

		// System.setProperty("browserWebDriver", "firefox");

		String browserProperty = "";
		Boolean headless = false;

		try {
			browserProperty = System.getProperty("browserWebDriver");

			// run headless: clean test -DbrowserWebDriver=firefox -Dheadless=true
			if (System.getProperty("headless").equals("true")) {
				headless = true;
			}
		} catch (Exception e) {
			fail("Error en parámetros llamada a maven. En Run Configurations... Añade en los VM Arguments: -DbrowserWebDriver=chrome -Dheadless=false");
		}

		switch (browserProperty) {
		case "firefox":
			// Firefox
			// Descargar geckodriver de https://github.com/mozilla/geckodriver/releases
			// Descomprimir el archivo geckodriver.exe en la carpeta drivers

			System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe");
			FirefoxOptions firefoxOptions = new FirefoxOptions();
			if (headless)
				firefoxOptions.setHeadless(headless);
			driver = new FirefoxDriver(firefoxOptions);

			break;
		case "chrome":
			// Chrome
			// Descargar Chromedriver de https://chromedriver.chromium.org/downloads
			// Descomprimir el archivo chromedriver.exe en la carpeta drivers

			System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
			ChromeOptions chromeOptions = new ChromeOptions();
			if (headless)
				chromeOptions.setHeadless(headless);
			chromeOptions.addArguments("window-size=1920,1080");
			driver = new ChromeDriver(chromeOptions);

			break;

		default:
			fail("Please select a browser");
			break;
		}
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}
	@Test
	public void hmisual() {
		// Test name: hmis-ual
		// Step # | name | target | value
		// 1 | open | / | 
		driver.get("https://www.ual.es/");
	    // 2 | setWindowSize | 1251x740 | 
	    driver.manage().window().setSize(new Dimension(1251, 740));
	    // 3 | waitForElementPresent | xpath=//header/div[2] | 30000
	    {
	      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
	      wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//header/div[2]")));
	    }
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 4 | storeXpathCount | xpath=//button[contains(.,'Guardar')] | botonGuardar
	    vars.put("botonGuardar", driver.findElements(By.xpath("//button[contains(.,\'Guardar\')]")).size());
	    // 5 | echo | boton ${botonGuardar} | 
	    System.out.println("boton "+ vars.get("botonGuardar").toString());
	    // 6 | if | ${botonGuardar}>0 | 
	    if ((Boolean) js.executeScript("return (arguments[0]>0)", vars.get("botonGuardar"))) {
	      // 7 | click | css=.btn-accept | 
	      driver.findElement(By.cssSelector(".btn-accept")).click();
	      // 8 | end |  | 
	    }
	    // 9 | mouseOver | css=.dropdown:nth-child(2) .dropdown-toggle | 
	    {
	      WebElement element = driver.findElement(By.cssSelector(".dropdown:nth-child(2) .dropdown-toggle"));
	      Actions builder = new Actions(driver);
	      builder.moveToElement(element).perform();
	    }
	    // 10 | mouseOver | css=.dropdown:nth-child(2) .dropdown-toggle | 
	    {
	      WebElement element = driver.findElement(By.cssSelector(".dropdown:nth-child(2) .dropdown-toggle"));
	      Actions builder = new Actions(driver);
	      builder.moveToElement(element).perform();
	    }
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 11 | click | linkText=Grados | 
	    driver.findElement(By.linkText("Grados")).click();
	    
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 12 | click | xpath=//span[contains(.,'Grado en Ingeniería Informática (Plan 2015)')] | 
	    driver.findElement(By.xpath("//span[contains(.,\'Grado en Ingeniería Informática (Plan 2015)\')]")).click();
	    // 13 | waitForElementVisible | id=tituloGrado | 30000
	    {
	      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
	      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("tituloGrado")));
	    }
	    try {
	        Thread.sleep(3000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    // 14 | mouseOver | linkText=Plan de Estudios | 
	    {
	      WebElement element = driver.findElement(By.linkText("Plan de Estudios"));
	      Actions builder = new Actions(driver);
	      builder.moveToElement(element).perform();
	    }
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    // 15 | click | linkText=Plan de Estudios | 
	    driver.findElement(By.linkText("Plan de Estudios")).click();
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 16 | click | linkText=Asignaturas | 
	    driver.findElement(By.linkText("Asignaturas")).click();
	    try {
	        Thread.sleep(2000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }

	    // 17 | assertText | linkText=Herramientas y Métodos de Ingeniería del Software | Herramientas y Métodos de Ingeniería del Software
	    assertThat(driver.findElement(By.linkText("Herramientas y Métodos de Ingeniería del Software")).getText(), is("Herramientas y Métodos de Ingeniería del Software"));
	}

	@Test
	public void tdiual() {
		// Test name: mds2-ual
		// Step # | name | target | value
		// 1 | open | / | 
		driver.get("https://www.ual.es/");
	    // 2 | setWindowSize | 1251x740 | 
	    driver.manage().window().setSize(new Dimension(1251, 740));
	    // 3 | waitForElementPresent | xpath=//header/div[2] | 30000
	    {
	      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
	      wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//header/div[2]")));
	    }
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 4 | storeXpathCount | xpath=//button[contains(.,'Guardar')] | botonGuardar
	    vars.put("botonGuardar", driver.findElements(By.xpath("//button[contains(.,\'Guardar\')]")).size());
	    // 5 | echo | boton ${botonGuardar} | 
	    System.out.println("boton "+ vars.get("botonGuardar").toString());
	    // 6 | if | ${botonGuardar}>0 | 
	    if ((Boolean) js.executeScript("return (arguments[0]>0)", vars.get("botonGuardar"))) {
	      // 7 | click | css=.btn-accept | 
	      driver.findElement(By.cssSelector(".btn-accept")).click();
	      // 8 | end |  | 
	    }
	    // 9 | mouseOver | css=.dropdown:nth-child(2) .dropdown-toggle | 
	    {
	      WebElement element = driver.findElement(By.cssSelector(".dropdown:nth-child(2) .dropdown-toggle"));
	      Actions builder = new Actions(driver);
	      builder.moveToElement(element).perform();
	    }
	    // 10 | mouseOver | css=.dropdown:nth-child(2) .dropdown-toggle | 
	    {
	      WebElement element = driver.findElement(By.cssSelector(".dropdown:nth-child(2) .dropdown-toggle"));
	      Actions builder = new Actions(driver);
	      builder.moveToElement(element).perform();
	    }
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 11 | click | linkText=Grados | 
	    driver.findElement(By.linkText("Grados")).click();
	    
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 12 | click | xpath=//span[contains(.,'Grado en Ingeniería Informática (Plan 2015)')] | 
	    driver.findElement(By.xpath("//span[contains(.,\'Grado en Ingeniería Informática (Plan 2015)\')]")).click();
	    // 13 | waitForElementVisible | id=tituloGrado | 30000
	    {
	      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
	      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("tituloGrado")));
	    }
	    try {
	        Thread.sleep(3000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    // 14 | mouseOver | linkText=Plan de Estudios | 
	    {
	      WebElement element = driver.findElement(By.linkText("Plan de Estudios"));
	      Actions builder = new Actions(driver);
	      builder.moveToElement(element).perform();
	    }
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    // 15 | click | linkText=Plan de Estudios | 
	    driver.findElement(By.linkText("Plan de Estudios")).click();
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    // 16 | click | linkText=Asignaturas | 
	    driver.findElement(By.linkText("Asignaturas")).click();
	    try {
	        Thread.sleep(2000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
		assertThat(driver.findElement(By.linkText("Tratamiento Digital de Imágenes")).getText(), is("Tratamiento Digital de Imágenes"));
		assertThat(driver.findElement(By.linkText("Modelado y Diseño del Software 2")).getText(), is("Modelado y Diseño del Software 2"));
	}
}
