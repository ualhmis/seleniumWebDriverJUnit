package org.ual.hmis.sailsapp;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.gargoylesoftware.htmlunit.BrowserVersion;
import com.gargoylesoftware.htmlunit.WebClient;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;
public class RegistrookTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;
	@Before
	public void setUp() {

		System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe"); 
		System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe"); 
		
	    // FirefoxOptions firefoxOptions = new FirefoxOptions();
		// firefoxOptions.setHeadless(false);
		// driver = new FirefoxDriver(firefoxOptions);
		
		ChromeOptions chromeOptions = new ChromeOptions();
		chromeOptions.setHeadless(false);
		driver = new ChromeDriver(chromeOptions);
		
		// simple case - javascript support enabled
/*		driver = new HtmlUnitDriver(BrowserVersion.FIREFOX_68, true)
		{
		    @Override
		    protected WebClient modifyWebClient(WebClient client) {
		        final WebClient webClient = super.modifyWebClient(client);
		        // you might customize the client here
		        webClient.getOptions().setCssEnabled(true);
		        webClient.getOptions().setThrowExceptionOnScriptError(false);

		       return webClient;
		    }
		};
*/
		
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
		// driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
	}
	@After
	public void tearDown() {
		driver.quit();
	}
	
	@Test
	  public void registrook() {
	    driver.get("http://localhost:1337/");
	    driver.manage().window().setSize(new Dimension(1080, 824));
	    try {
	        Thread.sleep(10000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    WebDriverWait wait = new WebDriverWait(driver, 10);
	    wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Sign up")));
	    driver.findElement(By.linkText("Sign up")).click();
	    vars.put("emailrandom", js.executeScript("return \"ual-\" + Math.floor(Math.random()*1000000)+\"@ual.es\""));
	    System.out.println(vars.get("emailrandom").toString());
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.id("full-name")).sendKeys("User-random");
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    
	    driver.findElement(By.id("email-address")).sendKeys(vars.get("emailrandom").toString());
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.id("password")).sendKeys("joaquin");
	    try {
	        Thread.sleep(10000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.id("confirm-password")).sendKeys("joaquin");
	    try {
	        Thread.sleep(10000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.id("terms-agreement")).click();
	    try {
	        Thread.sleep(10000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.xpath("//button[@type='submit']")).click();
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    assertThat(driver.findElement(By.cssSelector("h1")).getText(), is("Welcome!"));
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.id("header-account-menu-link")).click();
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.linkText("Sign out")).click();
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.xpath("//h1[contains(.,\'Sign in to your account\')]")).click();
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    assertThat(driver.findElement(By.cssSelector(".text-center:nth-child(1)")).getText(), is("Sign in to your account"));
	  }
	@Ignore
	@Test
	public void loginwrongpassword() {
		driver.get("http://localhost:1337/");
		driver.manage().window().setSize(new Dimension(1080, 824));
		driver.findElement(By.linkText("Log in")).click();
		WebElement firstResult;
		try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.cssSelector(".form-group:nth-child(1) > .form-control")).sendKeys("jjcanada@ual.es");
	    try {
	        Thread.sleep(1000);
	      } catch (InterruptedException e) {
	        e.printStackTrace();
	      }
	    driver.findElement(By.cssSelector(".form-group:nth-child(2) > .form-control")).sendKeys("hola");

		firstResult = new WebDriverWait(driver, 5)
				.until(ExpectedConditions.elementToBeClickable(
						By.cssSelector(".ajax-button")));
		driver.findElement(By.cssSelector(".ajax-button")).click();
		{
			firstResult = new WebDriverWait(driver, 5)
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//small[contains(.,\'The credentials you entered are not associated with an account. Please check your email and/or password and try again.\')]")));
			List<WebElement> elements = driver.findElements(By.xpath("//small[contains(.,\'The credentials you entered are not associated with an account. Please check your email and/or password and try again.\')]"));
			assert(elements.size() > 0);
		}
	}
	@Ignore
	@Test
	public void loginemptyusername() {
		driver.get("http://localhost:1337/");
		driver.manage().window().setSize(new Dimension(1080, 824));
		driver.findElement(By.linkText("Log in")).click();
		WebElement firstResult = new WebDriverWait(driver, 5)
				.until(ExpectedConditions.elementToBeClickable(
						By.cssSelector(".form-group:nth-child(2) > .form-control")));

		driver.findElement(By.cssSelector(".form-group:nth-child(2) > .form-control")).click();
		driver.findElement(By.cssSelector(".form-group:nth-child(2) > .form-control")).sendKeys("asfasf");
		driver.findElement(By.cssSelector(".ajax-button")).click();
		{
			List<WebElement> elements = driver.findElements(By.cssSelector(".invalid-feedback"));
			assert(elements.size() > 0);
		}
	}


}
